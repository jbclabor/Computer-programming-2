"
Name: John Benedict C. Labor
"
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 1. Write a R program to create a vector of a specified type and length. Create vector of numeric, complex, logical and character types of length 5. (Hint:use vector()).
num <- vector("numeric", 5)
print("Numeric Type:")
print(num)
  
comp <- vector("complex", 5)
print("Complex Type:")
print(comp)
  
logic <- vector("logical", 5)
print("Logical Type:")
print(logic)
  
chr <- vector("character", 5)
print("Character Type:")
print(chr)
  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# 2. Write a R program to add two vectors of integers type and length 3. (What will happen if the two vectors are of not the same length?)
n1 <- c(10, 20, 30)
n2 <- c(20, 10, 40)
  
print ('Original Vectors')
n1
n2
  
print ("After adding two vectors")
n1+n2
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#3 Write a R program to append value to a given empty vector. (Hint: Use forloop)
blank <- c()
  
x <- c(1,2,3,4,5,6,7,8,9)
  
for (i in 1:length(x))
  blank[i] <- x[i]
x
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'
4
Given: x = (10, 20, 30, 25, 9, 26, 20).

a) Find the sum, Mean and Product of a Vector, ignore element like NA or NaN. (Hint: use sum(), mean(), prod() ).

b) Find the Minimum and the maximum of a Vector. (Hint: use max(),min())

c) Sort the vector in ascending and descending order. (Hint: use sort())

'
-----------------------------------------------
x = c(10, 20, 30, 25, 9, 26, 20)
  
# sum:
a4a <- sum(x)
a4a
  
# mean:
a4b <- mean(x)
a4b
  
#prod
a4c <- prod(x)
a4c
-----------------------------------------------
# minimum
b4a <- min(x)
b4a

# maximum
b4b <- max(x)
b4b
-----------------------------------------------
# ascending
c4a <- sort(x,decreasing = FALSE)
c4a

# descending
c4b <- sort(x, decreasing = TRUE)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
'
5.
  Given x = (10, 20, 30, 25, 9, 26, 20) and y = (10, 20, 25, 19, 29,30, 31) . What does the following function do?
    a) print(is.element(25, x)), print(is.element(56, x))
   
    b) print(sum(x==20))
   
    c) print(tail(x, n=1))
   
    d) l = length(x)
       print(sort(x, partial = l-1)[l-1])
   
    e) print("n = 1")
       n = 1
       print(sort(x, TRUE)[n])
       print("n = 2")
       n = 2
       print(sort(x, TRUE)[n])
       print("n = 3")
       n = 3
       print(sort(x, TRUE)[n])
       print("n = 4")
       n = 4
       print(sort(x, TRUE)[n])
   
    f) result = intersect(intersect(x,y)
       print(result)
   
    g) print(unique(x))
   
    h) result = setdiff(x, y)
       print(result)
   
    i) rx = rev(x)
       print(rx)
'
-----------------------------------------------
x <- c(10, 20, 30, 25, 9, 26, 20)
y <- c(10, 20, 25, 19, 29,30, 31)
-----------------------------------------------
a5a <- (is.element(25, x))
a5b <- (is.element(56, x))
-----------------------------------------------
b5 <-print(sum(x==20))
-----------------------------------------------
c5 <- (tail(x, n=1))
-----------------------------------------------
d5 <- l = length(x)
print(sort(x, partial = d5-1)[d5-1])
-----------------------------------------------
print("n = 1")
n = 1
print(sort(x, TRUE)[n])
print("n = 2")
n = 2
print(sort(x, TRUE)[n])
print("n = 3")
n = 3
print(sort(x, TRUE)[n])
print("n = 4")
n = 4
print(sort(x, TRUE)[n])
-----------------------------------------------
f5 <- intersect(x,y)
print(f5)
-----------------------------------------------
print(unique(x))
-----------------------------------------------
h5 <- setdiff(x,y)
print(h5)
-----------------------------------------------
i5 <- rev(x)
print(rx)
-----------------------------------------------
#6.What is the output of this program? (convert given dataframe to column(s) to a vector)

#a
dfc1 <- c(1, 2, 3, 4, 5)
dfc2 <- c(6, 7, 8, 9, 10)
dfc3 <- c(11, 12, 13, 14, 15)
dfc4 <- c(16, 17, 18, 19, 20)
v <- data.frame(dfc1=1:5, dfc2=6:10, dfc3=11:15, dfc4=16:20)
print(v)

#b
v <- c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90)
print("Original vector:")
print(v)
ctr <- sum(v > 10 & v < 50)
print("Number of vector values between 10 and 50:")
print(ctr)

#c
df = data.frame(code = c("R","G","W","B"),name = c("Red","Green","White", "Black"))
print("Original vector:")
print(df)
result = setNames(as.character(df$name), df$code)
print(result)

#d
v = c(1,3,5,7,9)
print("Original vectors:")
print(v)
print("Dimension of the vector:")
print(dim(v))
print("length of the vector:")
print(length(v))

#e 
v1 = c(1,3,5,7,9)
v2 = c(2,4,6,8,10)
print("Original vectors:")
print(v1)
print(v2)
print("Combines the said two vectors by columns:")
result = cbind(v1,v2)
print(result)
print("Combines the said two vectors by rows:")
result = rbind(v1,v2)
print(result)

#f
v = c(15,26,9,7,10,0,9,15)
print("Original vector:")
print(v)
print("Test whether the value > 10 or not:")
print(v > 10)

#g
v = c(1, 2, NULL, 3, 4, NULL)
print("Original vector:")
print(v)
new_v = (v+3)[(!is.na(v)) & v > 0]
print("New vector:")
print(new_v)

#h 
x = 1:15
print("New vector using : operator-")
print(x)
print("New vector using seq() function-")
print("Specify step size:")
y = seq(1, 3, by=0.3) 
print(y)
print("Specify length of the vector:")
z = seq(1, 5, length.out = 6)
print(z)
